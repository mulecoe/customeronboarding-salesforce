<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:s3="http://www.mulesoft.org/schema/mule/s3" xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/s3 http://www.mulesoft.org/schema/mule/s3/current/mule-s3.xsd">
	
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="8322475d-3704-44da-8feb-a53b65c8ae2f" basePath="/api">
		<http:request-connection host="storage-process-api.sg-s1.cloudhub.io" />
	</http:request-config>
	<http:request-config name="sfdocumentsrequest" doc:name="HTTP Request configuration" doc:id="b5d8eea1-b2b8-4032-897a-dd9d73260c9e" basePath="/api" >
		<http:request-connection host="salesforce-document-api.sg-s1.cloudhub.io" />
	</http:request-config>
	<global-property doc:name="Global Property" doc:id="ada14269-619c-4f1c-8bf2-7bb95332d5d0" name="env" value="dev" />
	<configuration-properties doc:name="Configuration properties" doc:id="a25cb10d-96f7-407c-bc0d-bcd5a4f39e55" file="dev.properties" />
	<flow name="adresscreation" doc:id="69e04778-6dba-4e29-a06c-6a4a967831d6" >
		<ee:transform doc:name="Transform Message" doc:id="914327d6-8c92-4eda-b810-d685ff89dca7" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="Permanentaddress" ><![CDATA[%dw 2.0
output application/java
fun addressMapping(obj:Object) = ([

    {  

       
       Name: obj.'permaddr-line',
       Address_Years__c: obj.'permaddr-years',
       Address_City__c: obj.'permaddr-city',
       Address_Country__c: obj.'permaddr-country',
       Address_State__c: obj.'permaddr-state',
       Address_Zipcode__c: obj.'permaddr-zip',
       Address_Type__c: "Permanent Address"
       
       
       	
       
       

       }

])

---

addressMapping(vars.jsondata)]]></ee:set-variable>
				<ee:set-variable variableName="Previousaddress" ><![CDATA[%dw 2.0
output application/java
fun previousaddressMapping(obj:Object) = ([

    {  

       
       Name: obj.'prevaddr-line',
       Address_Years__c: obj.'prevaddr-years',
       Address_City__c: obj.'prevaddr-city',
       Address_Country__c: obj.'prevaddr-country',
       Address_State__c: obj.'prevaddr-state',
       Address_Zipcode__c: obj.'prevaddr-zip',
       Address_Type__c: "Previous Address"
       
       
       	
       
       

       }

])

---

previousaddressMapping(vars.jsondata)]]></ee:set-variable>
				<ee:set-variable variableName="Correspondenceaddress" ><![CDATA[%dw 2.0
output application/java
fun correspondenceaddressMapping(obj:Object) = ([

    {  

       
       Name: obj.'correspaddr-line',
       Address_Years__c: obj.'correspaddr-years',
       Address_City__c: obj.'correspaddr-city',
       Address_Country__c: obj.'correspaddr-country',
       Address_State__c: obj.'correspaddr-state',
       Address_Zipcode__c: obj.'correspaddr-zip',
       Address_Type__c: "Correspondence Address"
       
       
       	
       
       

       }

])

---

correspondenceaddressMapping(vars.jsondata)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<salesforce:create doc:name="Create permanent address" doc:id="0b378fd6-c221-4f6d-b8c6-ecceba498492" config-ref="leads-config" type="Address__c" target="permanentaddress" targetValue="#[payload.items.id reduce $$]">
			<salesforce:records ><![CDATA[#[vars.Permanentaddress]]]></salesforce:records>
		</salesforce:create>
		<salesforce:create type="Address__c" doc:name="Create correspondence address" doc:id="71f96043-e9a6-420f-9570-786866baf467" config-ref="leads-config" target="correspondenceaddress" targetValue="#[payload.items.id reduce $$]">
			<salesforce:records ><![CDATA[#[vars.Correspondenceaddress]]]></salesforce:records>
		</salesforce:create>
		<salesforce:create type="Address__c" doc:name="Create previous address" doc:id="83914835-261c-4eaa-bcf0-fbc1e2b88817" config-ref="leads-config" target="previousaddress" targetValue="#[payload.items.id reduce $$]">
			<salesforce:records ><![CDATA[#[vars.Previousaddress]]]></salesforce:records>
		</salesforce:create>
	</flow>
	<flow name="objectCreation" doc:id="fc108e17-c737-4c82-871d-9df4f722a55b" >
		<ee:transform doc:name="vars.inputPayload" doc:id="b405d3ff-2db9-40c7-95b3-250df60991d2">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="sfdc-id"><![CDATA[%dw 2.0
output application/json
---
{
	mongoDB_id : uuid(),
	createdDate: now()
	
}]]></ee:set-variable>
				<ee:set-variable variableName="transferstatus"><![CDATA["In progress"]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<mongo:insert-document doc:name="create sfdc-id" doc:id="928c8165-ca3e-4821-99fb-fdb9fe6b1f93" collectionName="${mongo.loandetailscollectionname}" target="mongodb" config-ref="loan-details-config">
			<mongo:document ><![CDATA[#[vars."sfdc-id"]]]></mongo:document>
		</mongo:insert-document>
		<flow-ref doc:name="Flow Reference" doc:id="cdff98dd-ce36-4156-9943-2f287d563b30" name="adresscreation"/>
		<flow-ref doc:name="createAccount" doc:id="c8b09c73-e2f2-4948-b4b4-d5a00e5e75f3" name="createAccount"/>
		<flow-ref doc:name="createcontact" doc:id="4464f5c6-719f-4d04-9d89-96311ba5ab68" name="createcontact"/>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="545d1adc-feb2-4cc3-9b77-00559c065b79" >
				<ee:transform doc:name="payload" doc:id="5c61de48-d406-4e7a-833f-178e08537764" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---

	"errored" : {
		errorcode: error.description,
		errortype: error.errorType.identifier
		
	}
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<mongo:update-documents collectionName="${mongo.loandetailscollectionname}" doc:name="Update error message in mongodb" doc:id="55e55f6e-55ab-42eb-9720-bb62cf364d9f" config-ref="loan-details-config">
					<mongo:query ><![CDATA[#[vars.'sfdc-id']]]></mongo:query>
				</mongo:update-documents>
				<flow-ref doc:name="emailflow" doc:id="7442c4cc-9869-455c-aba9-156106173a1b" name="emailflow"/>
			</on-error-propagate>
		</error-handler>
	</flow>
	<sub-flow name="createcontact" doc:id="fd09ef76-ebf1-4b0d-8ba2-5c876e4d2bc6" >
		<ee:transform doc:name="vars.referenceContact" doc:id="81724f26-1c89-4299-9f44-d83fc7aecbaa">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="referenceContact"><![CDATA[%dw 2.0
output application/java
fun ContactMapping(obj:Object) = ([

    {  

       LastName: obj.'ref-mname' ++ " " ++ obj.'ref-lname',
       FirstName: obj.'ref-fname',
       Phone: obj."ref-permaddr-phone",
       "MailingStreet":  obj."ref-permaddr",
       "MailingCity": obj."ref-permaddr-city",
       "MailingState": obj."ref-permaddr-state",
       "MailingPostalCode": obj."ref-permaddr-zip",
  	   "MobilePhone" : obj.'ref-permaddr-phone-alt'

       }

])

---

ContactMapping(vars.jsondata)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<salesforce:create type="Contact" doc:name="Create reference contact" doc:id="1dffe935-b9f6-4da6-82bb-0388fbb350ec" target="refcontactid" targetValue="#[payload.items.id reduce $$]" config-ref="leads-config">
					<salesforce:records><![CDATA[#[vars.referenceContact]]]></salesforce:records>
				</salesforce:create>
		<ee:transform doc:name="contact mappings" doc:id="0d3e2a91-08ee-4d0a-88af-f032e67e90f0">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="contactmapping"><![CDATA[%dw 2.0
output application/java
fun ContactMapping(obj:Object) = ([

    {  

   LastName: obj.'mname' ++ " " ++ obj.'lname',
   FirstName: obj.'fname',
   Type__c : "Employee contact",
   	SSN__c: obj.'ssn',
   Phone: obj."phonenum-primary",
   OtherPhone : obj.'phonenum-alt',
   Email: obj."email-primary",
  "AccountId" : vars.acctId,
  'Birthdate' : obj.'dob' as Date,
  "Reference_Contact__c" : vars.'refcontactid',
  MaritalStatus__c: obj.'marital-status',
  Gender__c:obj.'gender',
  Other_Gender__c : obj.'gender-other',
  Country_of_birth__c: obj.countryofbirth,
  Citizenship__c: obj.'primary-citizenship',
  CorrespondenceAddress__c: vars.correspondenceaddress,
  PermanentAddress__c: vars.permanentaddress,
   PreviousAddress__c: vars.previousaddress,
   MailingStreet: obj.'permaddr-line',
   MailingCity: obj.'permaddr-city',
   MailingState: obj.'permaddr-state',
    MailingPostalCode: obj.'permaddr-zip',
    MailingCountry: obj.'permaddr-country'

       }

])

---

ContactMapping(vars.jsondata)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<salesforce:create type="Contact" doc:name="Create contact" doc:id="676c72e7-a0e4-4000-aff3-e6c5a562c1b1" target="contactId" config-ref="leads-config" targetValue="#[payload.items.id reduce $$]">
			<salesforce:records><![CDATA[#[vars.contactmapping]]]></salesforce:records>
		</salesforce:create>
		<choice doc:name="Choice" doc:id="d995f51a-1213-4cf5-8009-eec458ab02ca" >
			<when expression="#[isEmpty(vars.contactId)]">
				<raise-error doc:name="Raise error" doc:id="f128b6d9-c91f-4575-8787-530b75d00f3d" type="ANY:NOTCREATED" description="Contact not created."/>
			</when>
			<otherwise>
				<logger level="INFO" doc:name="vars.contactId" doc:id="96a23d82-6c89-4c78-87d3-f05991a38b15" message='#["ContactId: " ++ vars.contactId]' />
				<set-variable value='#["Transfer Completed"]' doc:name="Set Variable" doc:id="62329146-8bc4-42e8-ae9b-62642ff12f96" variableName="transferstatus"/>
				<flow-ref doc:name="mongoUpdate" doc:id="4c469607-2ae0-4472-a8f3-01d567606539" name="mongoUpdate" />
				<flow-ref doc:name="emailflow" doc:id="6b038105-fc90-434c-9c9b-046c2ef50618" name="emailflow"/>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="createAccount" doc:id="51823135-d9f4-406a-a62d-4a5feb69702c" >
		<ee:transform doc:name="vars.accountmapping" doc:id="b89c473c-b952-4e56-a9e4-74de64f0df59" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="accountmapping" ><![CDATA[%dw 2.0
output application/java
fun AccountMapping(obj:Object) = ([

    {  

       Name: obj.fname ++ " " ++ obj.mname++ " " ++ obj.lname,
       SSN__c : obj.ssn,
       Phone: obj.'phonenum-primary',
       Other_Phone__c: obj.'phonenum-alt',
       Account_Type__c: obj.'account-type',
       AccountNumber: uuid(),
       Preffered_language__c: obj.'preferred-language',
       Preferred_language_other_name__c: obj.'preferred-language-other-name',
       Citizenship_alien_number__c : obj.'citizenship-alien-number',
       Citizenship_expdate__c : obj.'citizenship-expdate',
       Citizenship__c: obj.'citizenship',
       Selfemployed__c: obj.'selfemployed',
       Military_service__c: obj.'military-service',
       Employment_type__c: obj.'employment-type',
       Employment_employer_name__c: obj.'employment-employer-name',
       Employment_job_title__c: obj.'employment-job-title',
       Employment_years__c:obj.'employment-years',
       Employment_workphone__c: obj.'employment-wrokphone',
       Employment_occupation__c: obj.'employment-occup',
       Dec_party_to_lawsuit__c: obj.'dec-party-to-lawsuit',
       dec_foreclosed_property__c : obj.'dec-foreclosed-property',
       dec_declared_bankruptcy__c: obj.'dec-declared-bankruptcy',
       dec_bankruptcy_type__c: obj.'dec-bankruptcy-type',
       Status__c: "Created",
       CorrespondenceAddress__c: vars.correspondenceaddress,
       PermanentAddress__c: vars.permanentaddress,
       PreviousAddress__c: vars.previousaddress
       
       	
       
       

       }

])

---

AccountMapping(vars.jsondata)]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<salesforce:create type="Account" doc:name="Create account" doc:id="08c830cb-1a2f-48ba-a666-c6fde129867c" target="acctId" config-ref="leads-config" targetValue="#[payload.items.id reduce $$]">
			<salesforce:records ><![CDATA[#[vars.accountmapping]]]></salesforce:records>
		</salesforce:create>
		<choice doc:name="Choice" doc:id="4a5576e2-4efc-4f5e-b027-403a1e316af5" >
			<when expression="#[isEmpty(vars.acctId)]">
				<raise-error doc:name="Raise error" doc:id="361d4550-8e3f-45d9-926e-b36907d386f9" type="NOT:NOTCREATED" description="Account is not created in salesforce."/>
			</when>
			<otherwise >
				<flow-ref doc:name="mongoUpdate" doc:id="c5aada39-8dad-4737-ba12-f28faa14d8cc" name="mongoUpdate" />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="mongoUpdate" doc:id="2dedb5e7-de9e-4ac1-8c25-4197292a5eb8" >
		<ee:transform doc:name="vars.mongoData" doc:id="f058d78d-f225-47c1-86aa-1942386cf236">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="mongoData"><![CDATA[%dw 2.0
output application/json
---
{
	modifiedDate: now(),
	AccountId : vars.acctId,
	ContactId: vars.contactId,
	TransferStatus: vars.transferstatus,
	
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<mongo:update-documents doc:name="Update mongoDB data" doc:id="d9c6d8ca-4479-4e92-b8f1-bca3f173e1b8" collectionName="${mongo.loandetailscollectionname}" target="mongoupdate" config-ref="loan-details-config">
			<mongo:query><![CDATA[#[vars.'sfdc-id']]]></mongo:query>
			<mongo:content-to-update><![CDATA[#[vars.mongoData]]]></mongo:content-to-update>
		</mongo:update-documents>
	</sub-flow>
	<flow name="commsAPI" doc:id="c2ede82e-30cf-4ee7-83b9-bc0e1b3059a6" >
		<http:request method="POST" doc:name="sending email" doc:id="bb16d546-487a-4254-b723-8b25071868b8" config-ref="comms" path="${commsaccelerator.path}" />
	</flow>
	<sub-flow name="emailflow" doc:id="05c496c5-6125-4d4e-9af1-d378b18386ba" >
		<choice doc:name="Choice" doc:id="4fce8f69-a8cd-45df-8fe0-74be1d9792bf" >
			<when expression="#[vars.mongoData.'TransferStatus' == &quot;In progress&quot;]">
				<parse-template doc:name="rejected.html" doc:id="40758693-377a-4dd5-b7d1-2db19d816317" location="forms\rejected.html" target="htmlform" targetValue="#[payload]" />
				<ee:transform doc:name="converting to multipart" doc:id="569f6c66-6306-422c-9d45-766c2a9ebce1">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
import * from dw::core::Binaries
output multipart/form-data
---
{
  "parts": {
    "files": {
      "headers": {
        "Content-Disposition": {
          "name": "realtime",
          "subtype": "form-data"
        },
        "Content-Type": "text/plain"
      },
      "content": "Yes"
    },
    "files": {
      "headers": {
        "Content-Disposition": {
          "name": "subject-line",
          "subtype": "form-data"
        },
        "Content-Type": "text/plain"
      },
      "content": "Your Application has been Rejected"
    },
    "files": {
      "headers": {
        "Content-Disposition": {
          "name": "channel",
          "subtype": "form-data"
        },
        "Content-Type": "text/plain"
      },
      "content": "EMAIL"
    },
    "files": {
      "headers": {
        "Content-Disposition": {
          "name": "email-id",
          "subtype": "form-data"
        },
        "Content-Type": "text/plain"
      },
      "content": vars.jsondata.'email-primary'
    },
    "files": {
            "headers": {
                "Content-Disposition": {
                    "name": "files",
                    "filename": "Form.html",
                    "subtype": "form-data"
                },
                "Content-Type": "text/html"
            },
            "content": vars.htmlform
        }
  }
}
   


]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<flow-ref doc:name="commsAPI" doc:id="52f9b727-20c1-4bbe-8669-b16e47efbbe1" name="commsAPI"/>
			</when>
			<otherwise>
				<http:request method="POST" doc:name="mulesoft forms to get the otplink" doc:id="74cbb28b-e4c3-4796-9d29-7228d275f7e7" url="${formsaccelerator.url}" target="otplink">
			<http:body><![CDATA[#[%dw 2.0
output application/json
---
{
	"uuid" : vars.acctId as String
}]]]></http:body>
			<http:uri-params><![CDATA[#[output application/java
---
{
	"envelop-id" : p('formsaccelerator.otpform')
}]]]></http:uri-params>
		</http:request>
				<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;vars.otplink.link]" doc:name="vars.otplink" doc:id="463c79bf-b8d6-43cd-a345-d3325ee11183" variableName="otplink" />
				<parse-template doc:name="form_submitted.html" doc:id="ca7b7cc2-8d5e-4753-92e0-7ae835fa1178" location="forms\form_submitted.html" target="htmlform" targetValue="#[payload]"/>
				<ee:transform doc:name="converting to multipart" doc:id="60258a1a-ed3c-4d55-8c9f-8203492ab813" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
import * from dw::core::Binaries
output multipart/form-data
---
{
  "parts": {
    "files": {
      "headers": {
        "Content-Disposition": {
          "name": "realtime",
          "subtype": "form-data"
        },
        "Content-Type": "text/plain"
      },
      "content": "Yes"
    },
    "files": {
      "headers": {
        "Content-Disposition": {
          "name": "subject-line",
          "subtype": "form-data"
        },
        "Content-Type": "text/plain"
      },
      "content": "Your Application has been submitted with reference number " ++ vars.'jsondata'.loan_reference_id  
    },
    "files": {
      "headers": {
        "Content-Disposition": {
          "name": "channel",
          "subtype": "form-data"
        },
        "Content-Type": "text/plain"
      },
      "content": "EMAIL"
    },
    "files": {
      "headers": {
        "Content-Disposition": {
          "name": "email-id",
          "subtype": "form-data"
        },
        "Content-Type": "text/plain"
      },
      "content": vars.jsondata.'email-primary'
    },
    "files": {
            "headers": {
                "Content-Disposition": {
                    "name": "files",
                    "filename": "Form.html",
                    "subtype": "form-data"
                },
                "Content-Type": "text/html"
            },
            "content": vars.htmlform
        }
  }
}
   


]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<flow-ref doc:name="commsAPI" doc:id="8aac410f-6549-447e-9cc6-89352c4f7260" name="commsAPI" />
			</otherwise>
		</choice>
	</sub-flow>
	<flow name="onDatainsertionFlow" doc:id="185e4e8a-0af6-4410-9d3a-fc05a3e74567" >
		<mongo:object-listener collectionName="${mongo.formscollectionname}" doc:name="On Object Listener" doc:id="8f9553f4-bbb8-4c21-9e79-6fe584ee2236" watermarkField="createdDate" config-ref="formcollection-config">
			<scheduling-strategy>
				<fixed-frequency />
			</scheduling-strategy>
		</mongo:object-listener>
		<ee:transform doc:name="vars.jsondata" doc:id="96529c28-045d-4777-9a83-332686e16998">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="jsondata"><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="objectCreation" doc:id="b22cdc5e-9ab0-4af1-89ac-bd5909defce7" name="objectCreation" />
		<ee:transform doc:name="converting to multipart" doc:id="8793d67d-d872-4b4a-abc7-1c27002de8c0">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
import * from dw::core::Binaries
import * from dw::core::Arrays
import dw::module::Multipart
output multipart/form-data
---
{"parts":(vars.jsondata.'___attachments' map(files: {

            headers : {

                "Content-Disposition" : {

                    "name" : "files",

                    "filename" : $.fileName ++ "." ++ $.'extension',

                    "subtype" : "form-data"

                },

                "Content-Type" : $.mimetype

            },

            "content" : fromBase64($.content)

        })) reduce($$ ++ $)}


]]></ee:set-payload>
				<ee:set-attributes><![CDATA[%dw 2.0
output application/json
---
{
	"queryParams":{
		"id" : vars.applicationId
}

}]]></ee:set-attributes>
			</ee:message>
		</ee:transform>
		<ee:transform doc:name="attributes.queryParams.id" doc:id="3dae17b2-cd34-45e4-a965-d8b5414273fa" >
			<ee:message >
				<ee:set-attributes ><![CDATA[%dw 2.0
output application/json
---
queryParams:{
	"id": vars.acctId }]]></ee:set-attributes>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="uploadDoc" doc:id="94a889ae-5e1c-4cc1-abf1-03df9982221c" name="uploadDoc" />
<!-- [STUDIO:"upload documents to salesforce"]		<http:request method="POST" doc:name="upload documents to salesforce" doc:id="a4b32385-81a8-4880-886e-4ee19bb97f88" config-ref="storage" path="/${storage.path}">
			<http:query-params><![CDATA[#[output application/java
&#45;&#45;-
{
	"id" : vars.acctId
}]]]></http:query-params>
		</http:request> [STUDIO] -->
		<logger level="INFO" doc:name="payload" doc:id="50e2676f-e475-4a45-813b-e7fd5093dded" message="#[payload]" />
	</flow>
	<flow name="submit-formdata-Flow" doc:id="69773f5f-c5a5-4cc6-9c54-28cf93ac674c" >
        <ee:transform doc:name="payload" doc:id="04b2cb9f-0a67-4a17-978d-7ebb27b9ba82" >
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload
]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <logger level="INFO" doc:name="Logger" doc:id="8166a38e-2e4e-4995-bee5-cead17539c4a" message="#[payload]" />
        <ee:transform doc:name="form data" doc:id="5179c2b3-7bc8-420c-8504-ccc08ddac5af" >
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
output application/json



---
{
     loan_reference_id: uuid(),
     createdDate: now(),
     modifiedDate: now(),
     leadId: payload.formId.uniqueid,
     "loan_application_number": ""
}  ++ payload.payload ]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <logger level="INFO" doc:name="Logger" doc:id="fed5052b-7635-4676-9efd-f568a8c5ab55" message="#[payload]"/>
        <mongo:insert-document doc:name="Insert document" doc:id="8a5b41d7-2564-444e-93b8-12ceac6f2814" config-ref="formcollection-config" collectionName="${mongo.formscollectionname}" />
        <logger level="INFO" doc:name="Logger" doc:id="5cfc5ea1-f591-4a36-97d7-2038f36c1ad8" message="#[payload]"/>
        <ee:transform doc:name="Transform Message" doc:id="5668b3f4-1755-42f0-b93a-19c21c071199" >
            <ee:message >
                <ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.'loan_reference_id']]></ee:set-payload>
            </ee:message>
        </ee:transform>
		<parse-template doc:name="Parse Template" doc:id="94568976-8c07-4f54-94f3-1f1678bbe684" location="forms\submission_landingpage.html"/>
    
</flow>
</mule>
